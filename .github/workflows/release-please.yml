on:
  push:
    branches:
      - main
name: release-please
jobs:
  release:
    if: |
          !startsWith(github.event.head_commit.message, '[NO_CI]')

    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          token: ${{secrets.RELEASE_PLEASE_GITHUB_TOKEN}}
          sequential-calls: true
          command: manifest

      - uses: actions/checkout@v2
        if: ${{ steps.release.outputs.releases_created }}

      - uses: actions/cache@v2
        if: ${{ steps.release.outputs.releases_created }}
        with:
          path: |
            ~/.rustup
            ~/.cargo
            target
          key: ${{ runner.os }}-cargo

      - name: 'publish toad-msg'
        if: ${{ steps.release.outputs['toad-msg--release_created'] }}
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_TOKEN }}
        run: 'cargo publish'
        working-directory: 'toad-msg'
  
      - name: 'publish toad-macros'
        if: ${{ steps.release.outputs['toad-macros--release_created'] }}
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_TOKEN }}
        run: 'cargo publish'
        working-directory: 'toad-macros'
  
      - name: 'publish toad'
        if: ${{ steps.release.outputs['toad--release_created'] }}
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_TOKEN }}
        run: 'cargo publish'
        working-directory: 'toad'
  
      - name: 'publish toad-common'
        if: ${{ steps.release.outputs['toad-common--release_created'] }}
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_TOKEN }}
        run: 'cargo publish'
        working-directory: 'toad-common'

      - name: 'publish toad-array'
        if: ${{ steps.release.outputs['toad-array--release_created'] }}
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_TOKEN }}
        run: 'cargo publish'
        working-directory: 'toad-array'

      - name: 'publish toad-hash'
        if: ${{ steps.release.outputs['toad-hash--release_created'] }}
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_TOKEN }}
        run: 'cargo publish'
        working-directory: 'toad-hash'

      - name: 'publish toad-map'
        if: ${{ steps.release.outputs['toad-map--release_created'] }}
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_TOKEN }}
        run: 'cargo publish'
        working-directory: 'toad-map'

      - name: 'publish toad-string'
        if: ${{ steps.release.outputs['toad-string--release_created'] }}
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_TOKEN }}
        run: 'cargo publish'
        working-directory: 'toad-string'

      - name: 'publish toad-writable'
        if: ${{ steps.release.outputs['toad-writable--release_created'] }}
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_TOKEN }}
        run: 'cargo publish'
        working-directory: 'toad-writable'

      - name: 'publish toad-stem'
        if: ${{ steps.release.outputs['toad-stem--release_created'] }}
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_TOKEN }}
        run: 'cargo publish'
        working-directory: 'toad-stem'

      - name: 'publish toad-cursor'
        if: ${{ steps.release.outputs['toad-cursor--release_created'] }}
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_TOKEN }}
        run: 'cargo publish'
        working-directory: 'toad-cursor'

      - name: 'publish toad-result-ext'
        if: ${{ steps.release.outputs['toad-result-ext--release_created'] }}
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_TOKEN }}
        run: 'cargo publish'
        working-directory: 'toad-result-ext'

      - name: 'publish toad-len'
        if: ${{ steps.release.outputs['toad-len--release_created'] }}
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_TOKEN }}
        run: 'cargo publish'
        working-directory: 'toad-len'

      - name: 'publish toad-jni'
        if: ${{ steps.release.outputs['toad-jni--release_created'] }}
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_TOKEN }}
        run: 'cargo publish'
        working-directory: 'toad-jni'
